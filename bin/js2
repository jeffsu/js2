#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'

require 'rubygems'
require 'js2'


options = OpenStruct.new
options.rails = false
options.sleep_time = 1


op = OptionParser.new do |opts|
  opts.banner = "Usage: js2 <daemon|compile|rdoc|help|config> [options]"

  opts.on('-r', '--rails', "Rails (out_dir: ./public/javascript js2_dir: ./app/js2)") do |r|
    options.rails = true
  end

  opts.on('-e', '--environment ENV', "Mostly for use with rails or a yml file with multiple configurations.") do |env|
    options.env = env
  end

  opts.on('-c', '--config FILE', "Use js2.yml config file (run: js2 config to generate a config file)") do |file|
    options.yml = YAML.load_file(file)
  end

  opts.on('-i', '--include-rails', "Mostly for use with rails or a yml file with multiple configurations.") do |env|
    options.include_rails = true
  end

  opts.on('-s', '--sleep N', "Defines the wait time in between directory checks.  This is only applicable to daemon mode.") do |t|
    options.sleep_time = t.to_i
  end


  opts.on('-j', '--js2-dir DIR', "Directory where js2 files reside. Defaults to current directory.") do |d|
    options.js2_dir = d
  end

  opts.on('-o', '--out-dir DIR', "Output directory where javascript is written to. Defaults to current directory.") do |d|
    options.out_dir = d
  end

  opts.on('-h', '--haml-dir DIR', "Direcotry where js2.haml files reside.  Defaults to current directory.") do |d|
    options.haml_dir = d
  end
end

main_action = ARGV.first
if [ 'daemon', 'compile', 'rdoc', 'help', 'config' ].include?(main_action)

else
  main_action = nil
end

if main_action == 'help' || ! main_action
  puts op
  exit
end

if ! main_action
  main_action = 'daemon'
end

op.parse!

if options.yml && options.env
  options.yml = options.yml[options.env]
end

if options.yml
  options.yml.each_pair do |k,v|
    options.send(k +'=', v) if options.send(k) == nil
  end
end

puts options.inspect
puts options.include_rails.inspect

if options.include_rails
  puts "loading rails environment..."
  ENV['RAILS_ENV'] = options.env if options.env
  require './config/environment'
end

config = JS2::Util::Config.new

if options.rails
  config.rails!
end

config.out_dir  = options.out_dir  if options.out_dir
config.js2_dir  = options.js2_dir  if options.js2_dir
config.haml_dir = options.haml_dir if options.haml_dir
config.haml_engine = eval('::' + options.haml_engine_class + '.new') if options.haml_engine_class

puts config

if main_action == 'config'
  puts "# run: js2 config > js2.yml to create a config file"
  puts config.example_yml
  exit
end

processor = JS2::Util::Processor.new(config)

if main_action == 'daemon'
  puts "running in daemon mode..."
  while 1
    res = processor.process!
    puts "Compiling #{Time.now}..." if res[:changed].any?
    puts "Sleeping"
    sleep options.sleep_time
  end
elsif main_action == 'compile'
  puts "compiling once! use daemon to monitor changes and compile automatically."
end
