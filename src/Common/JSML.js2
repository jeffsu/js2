class JSML {
  static function process(txt) {
    return new KLASS(txt);
  }

  function initialize(txt) {
    var lines = txt.split(/\n/);
    this.root    = new JS2.JSMLElement('');
    this.current = this.root;
    this.stack   = [ this.root ];

    foreach (var l in lines) {
      if (l.match(/^\s*$/)) continue;
      this.processLine(l);
    }
  }

  function processLine(line) {
    console.log(line);
    var ele  = new JS2.JSMLElement(line);
    var scope = this.getScope();

    if (ele.scope == scope) {
      console.log('same');
      this.stack.pop();
      this.getLast().push(ele);
    } else if (ele.scope == scope+1) {
      console.log('greater');
      this.getLast().push(ele); 
      this.stack.push(ele);
    } else if (ele.scope < scope) {
      console.log('less');
      var diff = ele.scope - scope;
      while(diff-- != 0) {
        this.stack.pop();
      }
      this.getLast().push(ele);
    }
  }


  function getScope() {
    return this.stack.length;
  }

  function getLast() {
    return this.stack[this.stack.length-1];
  }

}


